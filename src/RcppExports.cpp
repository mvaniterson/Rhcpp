// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpparma_hcp
Rcpp::List rcpparma_hcp(NumericMatrix Fr, NumericMatrix Yr, int k, int lambda1, int lambda2, int lambda3, int iter);
RcppExport SEXP _Rhcpp_rcpparma_hcp(SEXP FrSEXP, SEXP YrSEXP, SEXP kSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP lambda3SEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Fr(FrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Yr(YrSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< int >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< int >::type lambda3(lambda3SEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_hcp(Fr, Yr, k, lambda1, lambda2, lambda3, iter));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hcpp
Rcpp::List rcpparma_hcpp(NumericMatrix Fr, NumericMatrix Yr, NumericMatrix xr, int k, int lambda1, int lambda2, int lambda3, int iter);
RcppExport SEXP _Rhcpp_rcpparma_hcpp(SEXP FrSEXP, SEXP YrSEXP, SEXP xrSEXP, SEXP kSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP lambda3SEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Fr(FrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Yr(YrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< int >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< int >::type lambda3(lambda3SEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_hcpp(Fr, Yr, xr, k, lambda1, lambda2, lambda3, iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rhcpp_rcpparma_hcp", (DL_FUNC) &_Rhcpp_rcpparma_hcp, 7},
    {"_Rhcpp_rcpparma_hcpp", (DL_FUNC) &_Rhcpp_rcpparma_hcpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rhcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
